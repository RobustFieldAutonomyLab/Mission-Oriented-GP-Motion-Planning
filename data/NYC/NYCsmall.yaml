trajectory:
  delta_t: 0.6
  total_time_step: 200
  start_position: [50, 100, -8]
  start_rotation: [0, 0, 0]
  start_velocity: [0, 0, 0]
  start_angular_velocity: [0, 0, 0]

  end_position: [40, 10, -8]
  end_rotation: [0, 0, 0]
  end_velocity: [0, 0, 0]
  end_angular_velocity: [0, 0, 0]

  average_velocity: [2, 0, 0]
  average_angular_velocity: [0, 0, 0]

planner:
  vehicle_size: 1
  check_inter: 10
  max_iter: 100000
  Qc: [0.01, 0.01, 0.01, 0.01, 0.01, 0.01]

  dynamics:
    use_vehicle_dynamics: true
    #Weight for kinematic constraints
    sigma: 1
  obstacle:
    #SDF parameter, Obstacle avoidance safe threshold
    #When using big cell size, use bigger epsilon_dist
    epsilon_dist: 1
    #Weight for obstacle avoidance
    cost_sigma: 2
  #not sure whether we could have seafloor and sealevel mission at the same time
  seafloor:
    seafloor_mission: true
    #Interest distance from seafloor
    epsilon_dist: 1.2
    #Weight for seafloor mission
    cost_sigma: 1
  sealevel:
    sealevel_mission: false
    #Interest distance from sealevel
    epsilon_dist: 1.2
    #Weight for sealevel mission
    cost_sigma: 1

  current:
    use_current: false
    cell_size: 1
    cell_size_z: 3
    origin: [0, 0, -32]

map:
  origin: [0, 0, -35]
  sea_level: -4
  cell_size: 1
  cell_size_z: 1
  use_boundary: true

path:
  load_sdf: false
  seafloor_path: "../../data/NYC/100/depth_grid_NYC_small.csv"
  sdf_path:
  out_path: "../../data/result.txt"
  current_u_path: "../../data/NYC/100/NYC100_u.csv"
  current_v_path: "../../data/NYC/100/NYC100_v.csv"

visualization:
  visualize: true
  downsize_mesh: false

ompl:
  method: "RRTStar"
  max_planning_time: 10
  cost_threshold: 1000

stomp:
  num_iterations: 5000
  control_cost_weight: 0.0
  num_iterations_after_valid: 0
  num_rollouts: 84
  max_rollouts: 121
  initialization_method: 2
  # 1: LINEAR_INTE 2: LINEAR_INTE_WITH_CURRENT 3: LINEAR_INTE_WITH_CURRENT_AND_VELOCITY
  std_dev: [52, 50, 10]
